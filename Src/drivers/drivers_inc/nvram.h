/******************************************************************************
*
* nvram.h - header file for nvram1 sentence file description
* Copyright (c) notice
*
******************************************************************************/
#ifndef __NVRAM_H__
#define __NVRAM_H__
/******************************************************************************
* includes ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
******************************************************************************/

//Standard includes
  #include <stdint.h>
  #include <stdbool.h>
  #include <string.h>
  #include <stdlib.h>
  #include <stdio.h>

//Project specific includes
  #include "proj_inc/project_config.h"
#if (PROJ_CONFIG_USE_DRVR_NVRAM == 0)
  #warning "NV ram driver not implemented"

#define eNvram_Request_Param_Init(p)   ER_NOT_ENABLED
#define eNvram_Request(p)              ER_NOT_ENABLED

#define tNvram_Request                 void *
#else

/******************************************************************************
*public defines ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
******************************************************************************/

/******************************************************************************
*public variables /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
******************************************************************************/

/******************************************************************************
* external variables //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
******************************************************************************/

/******************************************************************************
*public enums /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
******************************************************************************/
//NVram request IDs
typedef enum NVRAM_REQUEST_ID
{
  NVRAM_REQUEST_NONE = 0,
  NVRAM_REQUEST_INIT,
  NVRAM_REQUEST_READ,
  NVRAM_REQUEST_WRITE,
  NVRAM_REQUEST_REGISTER_ID,
  NVRAM_REQUEST_IS_ID_REGISTERED,
  NVRAM_REQUEST_LIMIT,
}NVRAM_REQUEST_ID;

/******************************************************************************
*public structures ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
******************************************************************************/
//tExample_struct description
typedef struct tNvram_Request
{
    NVRAM_REQUEST_ID eRequestID;
    uint32_t uiSettings_ID;
    uint32_t uiSize;
    uint8_t * pBuff;
}tNvram_Request;

/******************************************************************************
* external functions //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
******************************************************************************/

/******************************************************************************
* public functions ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
******************************************************************************/
ERROR_CODE eNvram_Request_Param_Init(tNvram_Request * pRequest);
ERROR_CODE eNvram_Request(tNvram_Request * pRequest);

#endif //PROJ_CONFIG_USE_DRVR_NVRAM
#endif //__NVRAM_H__
