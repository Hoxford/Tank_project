/******************************************************************************
*
* commander.h - include file for the application commander
* Copyright (c) notice
*
******************************************************************************/
#ifndef __COMMANDER_H__
#define __COMMANDER_H__
/******************************************************************************
* includes ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
******************************************************************************/

//Standard includes
  #include <stdint.h>
  #include <stdbool.h>
  #include <string.h>
  #include <stdlib.h>
  #include <stdio.h>

//Project specific includes
  #include "proj_inc/project_config.h"
#if (PROJ_CONFIG_USE_APP_COMMANDER == 0)
  #warning "Commander application not implemented"

#define eCommand_Param_Init(p)   ER_NOT_ENABLED
#define eCommand_Request(p)      ER_NOT_ENABLED

#define Command_Request_t        void *
#else

/******************************************************************************
*public defines ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
******************************************************************************/

/******************************************************************************
*public variables /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
******************************************************************************/

/******************************************************************************
* external variables //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
******************************************************************************/

/******************************************************************************
*public enums /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
******************************************************************************/
//Commander request ID's
typedef enum CMND_REQUEST_ID
{
  CMND_REQUEST_NONE = 0,
  CMND_REQUEST_TASK_PARAMETERS,
  CMND_REQUEST_SEND,
  CMND_REQUEST_LIMIT,
}CMND_REQUEST_ID;

/******************************************************************************
*public structures ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
******************************************************************************/
//tCommand_Request struct used in requesting functions
typedef struct Command_Request
{
  CMND_REQUEST_ID eRequestID;
  OSAL_Task_Parameters_t * pCommander_Task_Param;
  uint8_t * pBuff;
  uint32_t ui32Len;
}Command_Request_t, * pCommand_Request, * pCmnd_Req;

/******************************************************************************
* external functions //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
******************************************************************************/

/******************************************************************************
* public functions ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
******************************************************************************/

ERROR_CODE eCommand_Param_Init(pCmnd_Req pRequest);
ERROR_CODE eCommand_Request(pCmnd_Req pRequest);

#endif //PROJ_CONFIG_USE_APP_COMMANDER
#endif //__COMMANDER_H__
