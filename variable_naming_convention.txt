This document outlies the naming convention for variables.

variables/structs/enums will have a "_" character between each word in the variable.
ie int iMy_variable;

variables/structs/enums will have a capitol letter for the starting word immediatly after the type character. Any other character may be capitolized or lower-case.
ie int iThis_is_MY_vArIaBlE;

variables will be prefixed with a character representing their type.
  bool          b
  char          c
  enum          e
  int           i
  
  unisgned int  ui
  unsigned char uc


strings will be prefixed with s and can omit the c prefix
ie char sMy_string;

pointers will be previxed with p
ie int * piMy_variable;
   char * psMy_string;

enums will be prefixed with e
typedef enum
{
  ONE = 50,
  TWO,
  three,
  apple
  BaNaNaS
} eThe_enum;

eThe_enum eMy_enum;

structs will be prefixed with t unless in the case of a pointer, in which p comes first.
typedef struct
{
  int iVariable;
  int iThis_function(param);
}tThe_StrucT;

tThe_StructT tMy_Struct;
tThe_Struct * ptMy_Struct_pOiNtEr;
