/******************************************************************************
*
* file_name.c - 1 sentence file description
* Copyright (c) notice
*
******************************************************************************/
#ifndef __FILE_NAME_C__
#define __FILE_NAME_C__
/******************************************************************************
* includes ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
******************************************************************************/
#include "file.h"

/******************************************************************************
* defines /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
******************************************************************************/

// Define group ID mappings IE:
// RADIO interface mappings////////////////////////////////
  #def RADIO_EXAMPLE_DEF  value  //def description

// RADIO sub group mappings
  #def RADIO_EXAMPLE_DEF_AGAIN value //def description

// END RADIO interface mappings////////////////////////////

/******************************************************************************
* variables ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
******************************************************************************/
int     iExample_var;  //variable description
uin32_t uiAnother_var;

/******************************************************************************
* external variables //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
******************************************************************************/
extern int iExample_extern_var;  //external variable description

/******************************************************************************
* enums ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
******************************************************************************/
//eExample_enum description
typedef enum
{
    enum_1,
    enum_2,
    enum_3....
}eExample_enum;

eExample_enum eMy_enum; //short eMy_enum description

/******************************************************************************
* structures //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
******************************************************************************/
//tExample_struct description
typedef struct
{
    int var1;
    ....
}tExample_struct;

tExample_struct tMy_struct;  //short tMy_struct description

/******************************************************************************
* external functions //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
******************************************************************************/
extern int external_example_function(param); //short external function description
/******************************************************************************
* private function declarations ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
******************************************************************************/
int example_function(param_1, param_2); //short function declaration description

/******************************************************************************
* private functions ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
******************************************************************************/
/******************************************************************************
* name:
* description:
* param description: type - value: value description (in order from left to right)
*                    bool - true: do action when set to true  
* return value description: type - value: value description
******************************************************************************/
int example_PrivateFunction(param_1, param_2)
{
}

/******************************************************************************
* public functions ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
******************************************************************************/

/******************************************************************************
* name: Filename_or_abreviation_funciton
* description:
* param description: type - value: value description (in order from left to right)
*                    bool - true: do action when set to true  
* return value description: type - value: value description
******************************************************************************/
int iFilename_or_abreviation_funciton(param_1, param_2)
{
}

#endif //__FILE_NAME_C__